name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'README.md'
      - 'LICENSE'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Generate Build Info
        run: |
          mkdir -p src/main/resources
          echo "build.commit=${{ github.sha }}" > src/main/resources/build-info.properties
          echo "build.number=${{ github.run_number }}" >> src/main/resources/build-info.properties

      - name: Build with Maven
        run: mvn install -DskipTests

      - name: Test with Maven
        run: mvn test

      - name: Build Docker image
        run: docker build --build-arg jarfile=target/ircbot-0.0.1-SNAPSHOT.jar -t ghcr.io/${{ github.repository }}/ircbot:temp .

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push temporary Docker image
        run: docker push ghcr.io/${{ github.repository }}/ircbot:temp

  integration-test:
    runs-on: ubuntu-latest
    needs: build

    services:
      ircd:
        image: inspircd/inspircd-docker
        options: >-
          --health-cmd="/usr/bin/nc -z localhost 6667"
          --health-interval 5s
          --health-timeout 3s
          --health-start-period 5s
          --health-retries 5
        ports:
          - "6667:6667"
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ircbot
          POSTGRES_PASSWORD: ircbot
          POSTGRES_DB: ircbot
        ports:
          - "5432:5432"
      ircbot:
        image: ghcr.io/${{ github.repository }}/ircbot:temp
        env:
          SPRING_APPLICATION_JSON: >
            {"ircbot":{"irc":{"server":"ircd","port":6667,"ssl":false,"nick":"DrMockIt"},"testmode":true},
            "spring":{"datasource":{"url":"jdbc:postgresql://postgres:5432/ircbot","username":"ircbot","password":"ircbot"}}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Run Integration Tests
        run: mvn verify -Pintegration-tests

      - name: Dump Docker Logs
        if: ${{ always() }}
        run: |
          docker ps -a -q --filter "name=ircbot"
          CONTAINER_ID=$(docker ps -a -q --filter "name=ircbot" | head -n 1)
          if [ -n "$CONTAINER_ID" ]; then
            docker logs "$CONTAINER_ID"
          else
            echo "No container found matching 'ircbot'"
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: integration-test
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull temporary Docker image
        run: docker pull ghcr.io/${{ github.repository }}/ircbot:temp

      - name: Tag and Push Docker image
        run: |
          docker tag ghcr.io/${{ github.repository }}/ircbot:temp ghcr.io/${{ github.repository }}/ircbot:latest
          docker push ghcr.io/${{ github.repository }}/ircbot:latest

      - name: Deploy to Server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no service@helsinki.throughput.de -t << 'EOF'
            cd docker/ircbot
            docker-compose down
            docker-compose pull
            docker-compose up -d --remove-orphans
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
